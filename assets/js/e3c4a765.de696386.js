"use strict";(self.webpackChunkianadotio=self.webpackChunkianadotio||[]).push([[814],{7558:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=o(5893),n=o(1151);const r={slug:"release-gloo-net",title:"Gloo gets a new crate gloo-net",author:"Muhammad Hamza",author_title:"Maintainer of Gloo",author_url:"https://github.com/hamza1311",author_image_url:"https://avatars.githubusercontent.com/u/47357913?v=4",tags:["release"]},s=void 0,i={permalink:"/blog/release-gloo-net",editUrl:"https://github.com/rustwasm/gloo/blob/master/website/blog/2022-3-11-new-net-crate.md",source:"@site/blog/2022-3-11-new-net-crate.md",title:"Gloo gets a new crate gloo-net",description:"The Gloo team is happy to announce a new addition to the Gloo crates family: gloo-net. It is an HTTP requests",date:"2022-03-11T00:00:00.000Z",formattedDate:"March 11, 2022",tags:[{label:"release",permalink:"/blog/tags/release"}],readingTime:.56,hasTruncateMarker:!1,authors:[{name:"Muhammad Hamza",title:"Maintainer of Gloo",url:"https://github.com/hamza1311",imageURL:"https://avatars.githubusercontent.com/u/47357913?v=4"}],frontMatter:{slug:"release-gloo-net",title:"Gloo gets a new crate gloo-net",author:"Muhammad Hamza",author_title:"Maintainer of Gloo",author_url:"https://github.com/hamza1311",author_image_url:"https://avatars.githubusercontent.com/u/47357913?v=4",tags:["release"]},unlisted:!1,nextItem:{title:"Releasing v0.6.0",permalink:"/blog/release-0.6.0"}},l={authorsImageUrls:[void 0]},c=[{value:"Features",id:"features",level:2},{value:"Looking for contributors",id:"looking-for-contributors",level:2}];function u(e){const t=Object.assign({p:"p",code:"code",h2:"h2",ul:"ul",li:"li"},(0,n.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["The Gloo team is happy to announce a new addition to the Gloo crates family: ",(0,a.jsx)(t.code,{children:"gloo-net"}),". It is an HTTP requests\nlibrary built specially for WASM apps and provides idiomatic Rust bindings for the ",(0,a.jsx)(t.code,{children:"fetch"})," and ",(0,a.jsx)(t.code,{children:"WebSocket"})," API.\nThis has been a long requested library, and it has finally arrived."]}),"\n",(0,a.jsx)(t.h2,{id:"features",children:"Features"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["HTTP: complete wrappers around the browser's ",(0,a.jsx)(t.code,{children:"fetch"})," API."]}),"\n",(0,a.jsxs)(t.li,{children:["WebSocket: complete wrappers around the browser's ",(0,a.jsx)(t.code,{children:"WebSocket"})," API using Rust futures."]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["We have plans to also provide wrapper for ",(0,a.jsx)(t.code,{children:"XMLHttpRequest"})," in the future."]}),"\n",(0,a.jsx)(t.h2,{id:"looking-for-contributors",children:"Looking for contributors"}),"\n",(0,a.jsx)(t.p,{children:"Gloo project is in need of contributors. It would be really appreciated if you could contribute or raise awareness about\nthe Gloo project."})]})}const h=function(e={}){const{wrapper:t}=Object.assign({},(0,n.ah)(),e.components);return t?(0,a.jsx)(t,Object.assign({},e,{children:(0,a.jsx)(u,e)})):u(e)}},1151:(e,t,o)=>{o.d(t,{Zo:()=>i,ah:()=>r});var a=o(7294);const n=a.createContext({});function r(e){const t=a.useContext(n);return a.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const s={};function i({components:e,children:t,disableParentContext:o}){let i;return i=o?"function"==typeof e?e({}):e||s:r(e),a.createElement(n.Provider,{value:i},t)}}}]);